// Referential Integrity: Prisma에 외래키 제약조건 추가

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

// model User {
//     id        Int      @id @default(autoincrement())
//     email     String   @unique
//     name      String
//     avatar    String?
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

model User {
  id  String @id @default(cuid())
  phone Int? @unique
  email String @unique
  name String
  avatar String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id      String  @id @default(cuid())
  userId  String
  type    String
  provider  String
  providerAccountId String
  refreshToken String? @db.Text
  accessToken String? @db.Text
  expiresAt  Int?
  tokenType String?
  token     String
  scope String?
  idToken String? @db.Text
  sessionState  String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id  String  @id @default(cuid())
  sessionToken  String  @unique
  userId  String
  expires DateTime
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier  String
  token   String  @unique
  expires DateTime

  @@unique([identifier, token])
}